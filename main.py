import csv
import os
import datetime
from datetime import datetime, timedelta
import telebot


token = os.getenv('TOKEN')
bot = telebot.TeleBot(token)

data: dict[int, dict[str, str | datetime | timedelta]] = {}
yesterday_duration: dict[int, list[float]] = {}
report_found: dict[int, bool] = {}


@bot.message_handler(commands=['start'])
def start_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã start —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–ª–æ–≤–∞—Ä—è
    data, –≥–¥–µ –∫–ª—é—á - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –≤
    –∫–æ—Ç–æ—Ä—ã–π –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    data.setdefault(message.from_user.id, {})
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! '
                                      '–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞. '
                                      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /sleep, '
                                      '–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å, –∏ –∫–æ–º–∞–Ω–¥—É /wake, '
                                      '–∫–æ–≥–¥–∞ –ø—Ä–æ—Å–Ω–µ—Ç–µ—Å—å. '
                                      '–ï—Å–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ —É—Å–Ω—É—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '
                                      '/sleep –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–µ.')


@bot.message_handler(commands=['sleep'])
def sleep_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã sleep –≤ —Å–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø–∞—Ä—ã: 'date' - –¥–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ str;
    'sleep_time' - –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    –í—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã sleep –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    data[message.from_user.id]['date']: str = datetime.now().strftime('%d.%m.%Y')
    data[message.from_user.id]['sleep_time']: datetime = datetime.now()
    bot.send_message(message.chat.id, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! –ù–∞—á–∏–Ω–∞—é –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏üåå')


@bot.message_handler(commands=['wake'])
def wake_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã wake –ø—Ä–æ–±—É–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –∫–æ–¥ –≤ –±–ª–æ–∫–µ try:
    –≤ —Å–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø–∞—Ä—ã:
    'wake_time' - –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã;
    'duration' - —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –º–æ–º–µ–Ω—Ç–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ sleep –∏ wake.
    –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ sleep –Ω–µ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–µ—Ç –∫–ª—é—á–∞
    'sleep_time', –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ KeyError, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—ã–ª –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É sleep –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º
    –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
    sleep –∏ wake –±–æ–ª—å—à–µ —Å—É—Ç–æ–∫, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ
    —Å–æ–æ–±—â–µ–Ω–∏–µ.

    –ï—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ sleep –∏ wake –º–µ–Ω–µ–µ
    —Å—É—Ç–æ–∫, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º
    –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–Ω–∞. –ï—Å–ª–∏ –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ –≤–ø–µ—Ä–≤—ã–µ,
    –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–æ—Ä–º–∞—Ç–∞ .csv, –≥–¥–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    —Å–ª—É–∂–∏—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í —Ñ–∞–π–ª–µ –∏—â–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞ –∑–∞
    –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å. –í—á–µ—Ä–∞—à–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å
    —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –∏ —Ä–∞–∑–Ω–∏—Ü–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã wake –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    try:
        data[message.from_user.id]['wake_time']: datetime = datetime.now()
        data[message.from_user.id]['duration']: timedelta = (data[message.from_user.id]['wake_time']
                                                  - data[message.from_user.id]['sleep_time'])

    except KeyError:
        bot.send_message(message.chat.id, '–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –∑–∞–±—ã–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /sleep.')


    if timedelta(days=1) < data[message.from_user.id]['duration']:
        bot.send_message(message.chat.id, '–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –∑–∞–±—ã–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /sleep.')

    else:
        hours, minutes = (str(data[message.from_user.id]['duration']).split(':', maxsplit=2)[0],
                          str(data[message.from_user.id]['duration']).split(':', maxsplit=2)[1])
        bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!üåû –í—ã —Å–ø–∞–ª–∏: {hours} —á –∏ {minutes} –º–∏–Ω.')

        file_name: str = str(message.from_user.id) + '.csv'
        if os.path.exists(file_name):
            yesterday: datetime = datetime.now()-timedelta(days=1)

            with open(file_name, 'r', newline='') as f:
                reader = csv.DictReader(f, delimiter=';')
                for row in reader:
                    if row['date'] == yesterday.strftime('%d.%m.%Y'):
                        global yesterday_duration
                        yesterday_duration[message.from_user.id] = [float(i) for i in row['duration'].split(':')]

        if message.from_user.id in yesterday_duration:
            yesterday_dur_sec: float = timedelta.total_seconds(
                timedelta(hours=yesterday_duration[message.from_user.id][0],
                          minutes=yesterday_duration[message.from_user.id][1],
                          seconds=yesterday_duration[message.from_user.id][2]))
            difference: float = (timedelta.total_seconds(data[message.from_user.id]['duration'])
                              - yesterday_dur_sec)
            dif_h: float = abs(difference) // 3600
            dif_min: float = abs(difference)//60 % 60

            if difference > 0:
                bot.send_message(message.chat.id, f'–≠—Ç–æ –Ω–∞ {int(dif_h)} —á –∏ {int(dif_min)} –º–∏–Ω '
                                                      f'–±–æ–ª—å—à–µ, —á–µ–º –≤—á–µ—Ä–∞. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!')

            if difference < 0:
                bot.send_message(message.chat.id,
                                     f'–≠—Ç–æ –Ω–∞ {int(dif_h)} —á –∏ {int(dif_min)} –º–∏–Ω –º–µ–Ω—å—à–µ, —á–µ–º –≤—á–µ—Ä–∞. '
                                     f'–ñ–µ–ª–∞—é –≤–∞–º –ø–æ–±–æ–ª—å—à–µ —Å–∏–ª —Å–µ–≥–æ–¥–Ω—è!')

            del yesterday_duration[message.from_user.id]


        bot.send_message(message.chat.id, f'–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –ø–æ –¥–µ—Å—è—Ç–∏–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ '
                                              f'—Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /quality:')


@bot.message_handler(commands=['quality'])
def quality_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã quality –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_quality.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã quality –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    bot.register_next_step_handler(message, get_quality)

def get_quality(message: telebot.types) -> None:
    """
    –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ 'quality' –≤ —Å–ª–æ–≤–∞—Ä—å –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º
    —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã.
    :param message: –û—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞ –ø–æ
    –¥–µ—Å—è—Ç–∏–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ
    :return: None
    """
    data[message.from_user.id]['quality']: str = message.text
    bot.send_message(message.chat.id, '–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. '
                                      '–°–æ–∑–¥–∞–π—Ç–µ –∑–∞–º–µ—Ç–∫—É –æ –∫–∞—á–µ—Å—Ç–≤–µ —Å–Ω–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /notes:')


@bot.message_handler(commands=['notes'])
def notes_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã notes –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_note.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã notes –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    bot.register_next_step_handler(message, get_note)

def get_note(message: telebot.types) -> None:
    """
    –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫
    –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ 'notes' –≤ —Å–ª–æ–≤–∞—Ä—å –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—ã–≤–æ–¥–∏—Ç—Å—è
    —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –í—Å—è –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç—Å—è
    –µ—â–µ —Ä–∞–∑ –≤ –≤–∏–¥–µ —Ä–µ–∑—é–º–µ. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç) –∏–ª–∏
    —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–º .csv,
    –∏ —Ç—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤—Å—è –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã.
    :param message: –ó–∞–º–µ—Ç–∫–∞ –æ —Å–Ω–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    data[message.from_user.id]['notes']: str = message.text
    bot.send_message(message.chat.id, '–ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.')

    hours, minutes = (str(data[message.from_user.id]['duration']).split(':', maxsplit=2)[0],
                      str(data[message.from_user.id]['duration']).split(':', maxsplit=2)[1])
    bot.send_message(message.chat.id, f'–ü–æ–∑–≤–æ–ª—å—Ç–µ –º–Ω–µ —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞—Ç—å: '
                                      f'—Å–µ–≥–æ–¥–Ω—è {data[message.from_user.id]['date']} –≤—ã —Å–ø–∞–ª–∏ '
                                      f'{hours} —á –∏ {minutes} –º–∏–Ω.\n'
                                      f'–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞: {data[message.from_user.id]['quality']}.\n'
                                      f'–ó–∞–º–µ—Ç–∫–∞: {data[message.from_user.id]['notes']}.')

    file_name: str = str(message.from_user.id) + '.csv'
    if not os.path.exists(file_name):
        with open(file_name, 'w', newline='') as f:
            fieldnames = ['date', 'sleep_time', 'wake_time', 'duration', 'quality', 'notes']
            writer = csv.DictWriter(f, fieldnames=fieldnames, delimiter=';')
            writer.writeheader()
            writer.writerow(data[message.from_user.id])

    else:
        with open(file_name, 'a', newline='') as f:
            fieldnames = ['date', 'sleep_time', 'wake_time', 'duration', 'quality', 'notes']
            writer = csv.DictWriter(f, fieldnames=fieldnames, delimiter=';')
            writer.writerow(data[message.from_user.id])

    bot.send_message(message.chat.id,
                     '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç –∑–∞ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '
                     '/report –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥:')


@bot.message_handler(commands=['report'])
def report_handler(message: telebot.types) -> None:
    """
    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã report –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é get_report.
    :param message: –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã report –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    bot.register_next_step_handler(message, get_report)

def get_report(message: telebot.types) -> None:
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –Ω–µ–º –∏—â–µ—Ç—Å—è
    –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—É—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞—Ç—É. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    –Ω–∞–π–¥–µ–Ω–∞, –æ–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–≤–æ–¥–∏—Ç—Å—è
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param message: –î–∞—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç
    :return: None
    """
    date: str = message.text
    file_name: str = str(message.from_user.id) + '.csv'
    with open(file_name, 'r', newline='') as f:
        reader = csv.DictReader(f, delimiter=';')
        for row in reader:
            if row['date'] == date:
                bot.send_message(message.chat.id, f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –¥–∞—Ç—É {row['date']}:\n'
                                              f'–í—ã –ª–µ–≥–ª–∏ —Å–ø–∞—Ç—å –≤ {row['sleep_time'][11:16]}\n'
                                              f'–í—ã –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å –≤ {row['wake_time'][11:16]}\n'
                                              f'–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ {row['duration'].split(':', maxsplit=2)[0]} —á –∏ '
                                              f'{row['duration'].split(':', maxsplit=2)[1]} –º–∏–Ω\n'
                                              f'–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ {row['quality']}\n–ó–∞–º–µ—Ç–∫–∞: {row['notes']}')
                global report_found
                report_found[message.from_user.id] = True

    if message.from_user.id not in report_found or report_found[message.from_user.id] == False:
        bot.send_message(message.chat.id, '–ù–∞ –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É –æ—Ç—á–µ—Ç–∞ –Ω–µ—Ç.')

    report_found[message.from_user.id] = False


bot.polling(none_stop=True)
